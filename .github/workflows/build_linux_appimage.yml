name: Build linux appimage with cx_Freeze

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04] # build on old for compatibility, devcontainer was python3.12 bullseye, but this is probably close enough
        #, windows-latest]
        python-version: ["3.12"]

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      # Jonathan's addition from Grok
      - name: List files
        run: ls -la

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install patchelf on Linux (required for cx_Freeze)
      - name: Install patchelf (Linux)
        run: sudo apt-get update && sudo apt-get install -y patchelf

      # Build the executable
      - name: Build with cx_Freeze
        working-directory: ./src  # Adjust to your subdirectory
        run: python build_with_cxfreeze_multiarch_setup.py bdist_appimage > cxbuild_appimage.log
        # run: python setup.py build_exe

      - name: List files for debugging
        run: |
          ls -R src/dist/ || echo "src/dist/ not found"
          ls -R build/ || echo "build/ not found"
        shell: bash

      # Upload artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ matrix.os }}
          path: src/dist/*
